!function(t,s){"object"==typeof exports&&"object"==typeof module?module.exports=s():"function"==typeof define&&define.amd?define([],s):"object"==typeof exports?exports.engine=s():t.engine=s()}(self,(()=>{return t={579:t=>{let s;function e(t,s,e){const i=document.createElement("div");i.style.backgroundColor="#F24C3D",i.style.padding="3rem",i.style.borderRadius="1rem",i.style.position="absolute",i.style.left="50%",i.style.top="50%",i.style.transform="translate(-50%, -50%)",i.style.width="70vw",i.style.height="70vh",i.style.fontFamily="sans-serif";let o=`${e.name}: ${e.message}`;if(e.stack){const t=e.stack.match(/:(\d+):\d+/),s=t&&t[1];s&&(o+=` at line ${s}`)}i.innerHTML=`\n    <h1 style="color: white;">\n      !Simple Game Engine Error! <br><br>\n      ${t}\n    </h1>  \n    <p style="color: white;">\n    Potential fix: <br>\n    ${s}\n    </p>\n    <p style="color: white;">\n    Verbose error: <br>\n    ${o}</p>\n  `,document.body.appendChild(i)}t.exports={Game:class{constructor({s:t={w:500,h:500},loop:s,name:i="Simple Game Engine",bg:o="white"}){try{this.c,this.loop=s,this.name=i,this.keys={},this.targetFps=61,this.s=t,this.lastTime,this.requiredElapsed,this.bg=o,this.running=!0,this.internalSetup(t),this.addEventListeners()}catch(t){e("Game loop is not defined.","Create loop function. [function loop() {}] => Add loop function to game initialization. [loop: loop,]",t)}}internalSetup(t){try{this.requiredElapsed=1e3/this.targetFps;const e=document.createElement("canvas");if(isNaN(t.w)||isNaN(t.h))throw new Error("Parameter is not a number!");e.width=t.w,e.height=t.h,this.w=t.w,this.h=t.h,e.id="canvas",document.body.appendChild(e),document.title=this.name,document.querySelector("#engine-game-name")&&(document.querySelector("#engine-game-name").innerHTML=this.name),this.c=document.querySelector("#canvas"),s=e.getContext("2d")}catch(t){e("Internal canvas setup error.","Ensure game size are of type number and in object format. [s: { w: ~, h: ~ }]",t)}}begin(){try{const t=i=>{if(s.fillStyle=this.bg,s.fillRect(0,0,canvas.width,canvas.height),this.lastTime||(this.lastTime=i),i-this.lastTime>this.requiredElapsed){try{this.loop()}catch(t){e("External error in game loop.","Check code inside of defined loop function.",t)}this.lastTime=i}this.running&&requestAnimationFrame(t)};t()}catch(t){e("Interal loop setup error. ","Create loop function. [function loop() {}] => Add loop function to game initialization. [loop: loop,]",t)}}end(){this.running=!1}addEventListeners(){addEventListener("keydown",(t=>{this.keys[t.key.toLowerCase()]=!0})),addEventListener("keyup",(t=>{this.keys[t.key.toLowerCase()]=!1}))}key({key:t}){return this.keys[t]}add({name:t,value:s=null}){this[t]=s}setFps({fps:t}){this.requiredElapsed=1e3/t}},Object:class{constructor({pos:t={x:50,y:50},s={w:50,h:50},color:e="black",name:i="defaltName",img:o}={}){this.pos=t,this.s=s,this.color=e,this.img=o,this.name=i,this.imgLoaded=!1,this.loadImg()}loadImg(){try{void 0!==this.img&&(this.imgSrc=this.img,this.img=new Image,this.img.onload=()=>{this.imgLoaded=!0},this.img.src=this.imgSrc)}catch(t){errorBox("Unable to load image for sprite "+this.name+".","Check that source path is correct.",t)}}add({name:t,value:s=null}){this[t]=s}move({x:t=0,y:s=0}){try{this.pos.x+=t,this.pos.y+=s}catch(t){errorBox("Unable to run move function on sprite "+this.name+".","Ensure that parameter is of type number.",t)}}draw(){try{void 0===this.img?(s.fillStyle=this.color,this.s.r?(s.beginPath(),s.arc(this.pos.x,this.pos.y,this.s.r,0,2*Math.PI),s.fill()):s.fillRect(this.pos.x,this.pos.y,this.s.w,this.s.h)):this.imgLoaded&&(this.s.r?s.drawImage(this.img,this.pos.x-this.s.r,this.pos.y-this.s.r,2*this.s.r,2*this.s.r):s.drawImage(this.img,this.pos.x,this.pos.y,this.s.w,this.s.h))}catch(t){errorBox("Unable to load image for sprite "+this.name+".","Check that source path is correct.",t)}}update(){this.draw()}},ParticleSystem:class{constructor({pos:t={x:0,y:0},s={w:10,h:10},pieces:e=10,speed:i=5,color:o="black",friction:r=.95,dur:a=3e3,img:n}={}){this.pos=t,this.numberOfPieces=e,this.pieces=[],this.speed=i,this.s=s,this.color=o,this.friction=r,this.dur=a,this.img=n,this.imgLoaded=!1,this.loadImg(),this.init()}loadImg(){try{void 0!==this.img&&(this.imgSrc=this.img,this.img=new Image,this.img.onload=()=>{this.imgLoaded=!0},this.img.src=this.imgSrc)}catch(t){errorBox("Unable to load image for particle.","Check that source path is correct.",t)}}init(){try{for(let t=0;t<this.numberOfPieces;t++)this.pieces.push({pos:{x:this.pos.x,y:this.pos.y},v:{x:Math.random()*this.speed-this.speed/2,y:Math.random()*this.speed-this.speed/2},s:this.s});setTimeout((()=>{this.pieces=[]}),this.dur)}catch(t){e("Internal particle initialization error.","Ensure parameters are of propper type.",t)}}move(){try{if(isNaN(this.friction))throw new Error;this.pieces.forEach((t=>{t.pos.x+=t.v.x,t.pos.y+=t.v.y,t.v.x*=this.friction,t.v.y*=this.friction,Math.abs(t.v.x)<.001&&(t.v.x=0),Math.abs(t.v.y)<.001&&(t.v.y=0)}))}catch(t){e("Internal particle move error.","Ensure friction is of type number.",t)}}draw(){try{void 0===this.img?this.pieces.forEach((t=>{s.fillStyle=this.color,s.fillRect(t.pos.x,t.pos.y,t.s.w,t.s.h)})):this.imgLoaded&&this.pieces.forEach((t=>{s.drawImage(this.img,t.pos.x,t.pos.y,t.s.w,t.s.h)}))}catch(t){e("Internal particle draw error.","Ensure parameters are of propper type.",t)}}update(){this.move(),this.draw()}},Ui:class{constructor(){this.bars=[],this.barsIndex={},this.numbers=[],this.numbersIndex={}}bar({name:t,pos:s={x:0,y:0},s:e={w:200,h:20},color:i="black",min:o=0,max:r=100,from:a=50}={}){this.bars.push({name:t,pos:s,s:e,color:i,min:o,max:r,from:a}),this.barsIndex[t]=this.bars.length-1}number({pos:t={x:0,y:0},s=48,color:e="black",from:i=50,min:o=0,max:r=1e3,name:a}={}){this.numbers.push({name:a,pos:t,s,min:o,max:r,color:e,from:i}),this.numbersIndex[a]=this.numbers.length-1}updateNumber({name:t,from:s}){this.numbers[this.numbersIndex[t]].from=s}updateBar({name:t,from:s}){this.bars[this.barsIndex[t]].from=s}draw(){this.bars.forEach((t=>{let e=t.max-t.min,i=t.from/e;i<0?i=0:i>100&&(i=100),s.fillStyle=t.color,s.fillRect(t.pos.x,t.pos.y,t.s.w*i,t.s.h),s.strokeStyle="black",s.lineWidth=3,s.strokeRect(t.pos.x,t.pos.y,t.s.w,t.s.h)})),this.numbers.forEach((t=>{let e=t.from;t.from<t.min?e=t.min:t.from>t.max&&(e=t.max),s.fillStyle=t.color,s.font=`${t.s}px serif`,s.fillText(e,t.pos.x,t.pos.y)}))}update(){this.draw()}},DomManipulator:class{constructor(){}on({item:t,on:s,run:e}){t.addEventListener(s,(t=>{e()}))}set({item:t,prop:s,value:e}){t.style[s]=e}},DomSelector:class{constructor(){}get({sel:t}){return document.querySelector(t)}getAll({sel:t}){return document.querySelectorAll(t)}},EngineMath:class{constructor(){}random({min:t,max:s,type:e="int"}){return"int"===e?Math.floor(Math.random()*(s-t)+t):"float"===e?Math.random()*(s-t)+t:void 0}},route:function({object1:t,object2:s,dir:i="to",speed:o,type:r="axis"}){try{if("to"===i){if("axis"===r)t.pos.x<s.pos.x?t.pos.x+=o:t.pos.x>s.pos.x&&(t.pos.x-=o),t.pos.y<s.pos.y?t.pos.y+=o:t.pos.y>s.pos.y&&(t.pos.y-=o);else if("trig"===r){let e=Math.atan2(s.pos.y-t.pos.y,s.pos.x-t.pos.x);t.pos.x+=Math.cos(e)*o,t.pos.y+=Math.sin(e)*o}}else if("away"===i)if("axis"===r)t.pos.x<s.pos.x?t.pos.x-=o:t.pos.x>s.pos.x&&(t.pos.x+=o),t.pos.y<s.pos.y?t.pos.y-=o:t.pos.y>s.pos.y&&(t.pos.y+=o);else if("trig"===r){let e=Math.atan2(s.pos.y-t.pos.y,s.pos.x-t.pos.x);t.pos.x-=Math.cos(e)*o,t.pos.y-=Math.sin(e)*o}}catch(o){e(`Error routing ${t.name} ${i} ${s.name}.`,"Ensure speed parameter is passes. [{ speed: ~ }] Ensure objects have pos and s. [pos: { x: ~, y: ~ }, s: { -type=rect-(w: ~, h: ~) -type=circle-(r: ~) }]",o)}},collide:function({object1:t,object2:s,type:i="rect"}){try{if("rect"===i)return t.pos.x+t.s.w>=s.pos.x&&t.pos.x<=s.pos.x+s.s.w&&t.pos.y+t.s.h>=s.pos.y&&t.pos.y<=s.pos.y+s.s.h;if("circle"===i)return Math.abs(t.pos.x-s.pos.x)<=t.s.r+s.s.r&&Math.abs(t.pos.y-s.pos.y)<=t.s.r+s.s.r}catch(i){e(`Error colliding ${t.name} and ${s.name}.`,"Ensure objects have pos and s. [pos: { x: ~, y: ~ }, s: { -type=rect-(w: ~, h: ~) -type=circle-(r: ~) }]",i)}}}}},s={},function e(i){var o=s[i];if(void 0!==o)return o.exports;var r=s[i]={exports:{}};return t[i](r,r.exports,e),r.exports}(579);var t,s}));
//# sourceMappingURL=index.umd.min.js.map